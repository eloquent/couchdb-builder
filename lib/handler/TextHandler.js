// Generated by CoffeeScript 1.10.0
(function() {
  var Promise, TextHandler, fs, path,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  fs = require('fs');

  path = require('path');

  Promise = require('bluebird');

  module.exports = TextHandler = (function() {
    function TextHandler(extensions) {
      this.extensions = extensions != null ? extensions : ['', '.txt'];
      this.handleFile = bind(this.handleFile, this);
    }

    TextHandler.prototype.handleFile = function(filePath) {
      return new Promise((function(_this) {
        return function(resolve, reject) {
          var extension;
          extension = path.extname(filePath);
          if (indexOf.call(_this.extensions, extension) < 0) {
            return resolve(null);
          }
          return fs.readFile(filePath, function(error, data) {
            if (error) {
              return reject(error);
            }
            resolve([path.basename(filePath, extension), data.toString().replace(/(?:\r\n|\r|\n)$/, '')]);
          });
        };
      })(this));
    };

    return TextHandler;

  })();

}).call(this);
